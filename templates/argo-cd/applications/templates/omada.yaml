---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: omada
  namespace: argo-cd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  labels:
    monitoring: prometheus
spec:
  destination:
    namespace: monitoring
    server: 'https://kubernetes.default.svc'
  source:
    repoURL: 'http://charts.charliehaley.dev'
    targetRevision: 0.7.0
    chart: omada-exporter
    helm:
      values: |
        # Default values for omada_exporter.
        # This is a YAML-formatted file.
        # Declare variables to be passed into your templates.

        replicaCount: 1

        image:
          repository: ghcr.io/charlie-haley/omada_exporter
          pullPolicy: IfNotPresent

        omada:
            host: "https://10.17.84.3" #Host of the Omada Controller SDN
            username: "prometheus"       #Username for the Omada user.
            password: "prometheus"     #Host of the Omada Controller SDN
            site: "Home"              #Site you'd like to get metrics from.
            insecure: true              #Whether to skip verifying the SSL certificate on the controller, defaults to false.
            request_timeout: 15

        #Enable Prometheus ServiceMonitor
        serviceMonitor:
          enabled: true

        imagePullSecrets: []
        nameOverride: ""
        fullnameOverride: ""

        serviceAccount:
          # Specifies whether a service account should be created
          create: true
          # Annotations to add to the service account
          annotations: {}
          # The name of the service account to use.
          # If not set and create is true, a name is generated using the fullname template
          name: ""

        podAnnotations: {}

        podSecurityContext: {}
          # fsGroup: 2000

        securityContext: {}
          # capabilities:
          #   drop:
          #   - ALL
          # readOnlyRootFilesystem: true
          # runAsNonRoot: true
          # runAsUser: 1000

        service:
          type: ClusterIP
          port: 9202

        ingress:
          enabled: false
          annotations: {}
            # kubernetes.io/ingress.class: nginx
            # kubernetes.io/tls-acme: "true"
          # hosts:
          #   - host: chart-example.local
          #     paths: []
          # tls: []
          #  - secretName: chart-example-tls
          #    hosts:
          #      - chart-example.local

        resources: {}
          # We usually recommend not to specify default resources and to leave this as a conscious
          # choice for the user. This also increases chances charts run on environments with little
          # resources, such as Minikube. If you do want to specify resources, uncomment the following
          # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
          # limits:
          #   cpu: 100m
          #   memory: 128Mi
          # requests:
          #   cpu: 100m
          #   memory: 128Mi

        autoscaling:
          enabled: false
          minReplicas: 1
          maxReplicas: 1
          targetCPUUtilizationPercentage: 80
          # targetMemoryUtilizationPercentage: 80

        nodeSelector: {}

        tolerations: []

        affinity: {}
  sources: []
  project: home
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
