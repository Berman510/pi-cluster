---
- name: Process secrets files and create Kubernetes secrets
  hosts: localhost

  vars_files:
    - ../../config.yml
  
  tasks:
    - name: Find secrets YAML files locally
      ansible.builtin.find:
        paths: "../../secrets"
        patterns: "*.yml"
      register: secrets_files

    - name: Initialize secrets_info list
      set_fact:
        secrets_info: []

    - name: Read secrets files and append to list
      set_fact:
        secrets_info: "{{ secrets_info + [{'content': lookup('file', item.path) | from_yaml, 'name': (item.path | basename | regex_replace('\\.([^.]+)\\.yml$', '') | regex_replace('_', '-') | lower), 'namespace': item.path | basename | regex_replace('^[^.]+\\.([^.]+)\\.yml$', '\\1')}] }}"
      loop: "{{ secrets_files.files }}"
      no_log: true

- name: Create Kubernetes secrets on control_plane
  hosts: control_plane

  environment:
    K8S_AUTH_KUBECONFIG: /etc/rancher/k3s/k3s.yaml
    PATH: "~/go/bin:{{ ansible_env.PATH }}"

  tasks:
    - name: Ensure namespace exists
      kubernetes.core.k8s:
        kind: Namespace
        api_version: v1
        name: "{{ item.namespace }}"
        state: present
      loop: "{{ hostvars['localhost'].secrets_info }}"
      become: true
      become_user: root
      no_log: true

    - name: Template secret definition
      template:
        src: "../../secrets/secret_template.j2"
        dest: "/tmp/{{ item.name }}-secret.yml"
      vars:
        secret_content: "{{ item.content }}"
        secret_name: "{{ item.name }}"
        secret_namespace: "{{ item.namespace }}"
      loop: "{{ hostvars['localhost'].secrets_info }}"
      register: templated_secrets
      no_log: true

    - name: Apply secrets in Kubernetes
      kubernetes.core.k8s:
        state: present
        src: "{{ item.dest }}"
      loop: "{{ templated_secrets.results }}"
      become: true
      become_user: root
      no_log: true
